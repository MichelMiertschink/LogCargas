// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SerranaLogCargas.Data;

#nullable disable

namespace SerranaLogCargas.Migrations
{
    [DbContext(typeof(SerranaLogCargasContext))]
<<<<<<<< HEAD:SerranaLogCargas/Migrations/20240501004035_initialCreation.Designer.cs
    [Migration("20240501004035_initialCreation")]
    partial class initialCreation
========
    [Migration("20240427231656_InitialCreation")]
    partial class InitialCreation
>>>>>>>> 8d9709726d7ffa1f9aedb76998c0d7f3a9ee9b10:SerranaLogCargas/Migrations/20240427231656_InitialCreation.Designer.cs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SerranaLogCargas.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("SerranaLogCargas.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("CorporateReason")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CostCenter")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("SerranaLogCargas.Models.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("CelPhone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Driver");
                });

            modelBuilder.Entity("SerranaLogCargas.Models.LoadScheduling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool?>("Bol")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("CityDestinyId")
                        .HasColumnType("int");

                    b.Property<int>("CityOriginId")
                        .HasColumnType("int");

                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.Property<bool?>("Cte")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("IncludeDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("PD")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("Pay")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UnloadDate")
                        .HasColumnType("datetime(6)");

                    b.Property<float?>("VlContract")
                        .HasColumnType("float");

                    b.Property<float?>("VlTranspor")
                        .HasColumnType("float");

                    b.Property<float?>("Vladvance")
                        .HasColumnType("float");

                    b.Property<float?>("Weigth")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CityDestinyId");

                    b.HasIndex("CityOriginId");

                    b.HasIndex("CustomerId");

                    b.ToTable("LoadScheduling");
                });

            modelBuilder.Entity("SerranaLogCargas.Models.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Acronym")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("States");
                });

            modelBuilder.Entity("SerranaLogCargas.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DriverID")
                        .HasColumnType("int");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("varchar(7)");

                    b.HasKey("Id");

                    b.HasIndex("DriverID");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("SerranaLogCargas.Models.City", b =>
                {
                    b.HasOne("SerranaLogCargas.Models.State", "State")
                        .WithMany("Cities")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("SerranaLogCargas.Models.LoadScheduling", b =>
                {
                    b.HasOne("SerranaLogCargas.Models.City", "CityDestiny")
                        .WithMany()
                        .HasForeignKey("CityDestinyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SerranaLogCargas.Models.City", "CityOrigin")
                        .WithMany()
                        .HasForeignKey("CityOriginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SerranaLogCargas.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CityDestiny");

                    b.Navigation("CityOrigin");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("SerranaLogCargas.Models.Vehicle", b =>
                {
                    b.HasOne("SerranaLogCargas.Models.Driver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("SerranaLogCargas.Models.State", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
